name: Run Tests

on:
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
        dotnet-version: ['6.0.1xx', '6.0.4xx', '8.0.1xx', '8.0.3xx', '9.0.1xx']
        configuration: [Debug]

    runs-on: ${{ matrix.os }}  # For a list of available runner types, refer to
                               # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      IS_POSTSHARP_OWNED: true
      TEAMCITY_CLOUD_TOKEN: ${{ secrets.TEAMCITY_CLOUD_TOKEN }}
    #  METALAMA_DIAGNOSTICS: '{"logging": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": true,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false},"trace": {"*": true},"stopLoggingAfterHours": 2.0},"debugging": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false}},"crashDumps": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false},"exceptionTypes": ["*"]},"profiling": {"kind": "performance","processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false}}}'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET For PostSharp.Engineering
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.2xx # Keep in sync with eng\src\global.json.

    - name: Install .NET For The Test
      uses: actions/setup-dotnet@v4
      id: setup-dotnet
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Set The .NET SDK Version
      shell: pwsh
      run: ./Build.ps1 set-sdk-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --nologo

    - name: Run Tests
      shell: pwsh
      run: ./Build.ps1 test --nologo

    - name: Publish Test Report
      uses: dorny/test-reporter@v1.9.1
      if: success() || failure()
      with:
        name: build (${{ matrix.os }}, ${{ matrix.dotnet-version }}, ${{ matrix.configuration }})
        path: 'artifacts/testResults/*.trx'
        reporter: dotnet-trx
