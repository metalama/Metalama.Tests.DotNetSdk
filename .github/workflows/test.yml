name: Run Tests

on:
  workflow_dispatch:

jobs:

  build:

    # Exclusions cannot take arrays: https://github.com/orgs/community/discussions/7835

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-15] # Find and replace macos-15 to macos-latest as soon as macos-15 get out of preview.
        dotnet-version: ['6.0.1xx', '6.0.4xx', '8.0.1xx', '8.0.3xx', '8.0.4xx', '9.0.1xx' ]
        project-type: ['console', 'maui', 'maui-blazor', 'mvc', 'razor', 'blazor', 'blazorwasm', 'winforms', 'wpf'] # dotnet new list
        configuration: [Debug]
        exclude:
          - project-type: maui # N/A
            dotnet-version: 6.0.1xx
          - project-type: maui-blazor # N/A
            dotnet-version: 6.0.1xx
          - project-type: maui # error XA5207: Could not find android.jar for API level 31. - Won't solve - out of support.
            dotnet-version: 6.0.4xx
            os: macos-15
          - project-type: maui-blazor # error XA5207: Could not find android.jar for API level 31. - Won't solve - out of support.
            dotnet-version: 6.0.4xx
            os: macos-15
          - project-type: blazor # N/A
            dotnet-version: 6.0.1xx
          - project-type: blazor # N/A
            dotnet-version: 6.0.4xx
          - project-type: winforms # N/A
            os: ubuntu-latest
          - project-type: winforms # N/A
            os: macos-15
          - project-type: wpf # N/A
            os: ubuntu-latest
          - project-type: wpf # N/A
            os: macos-15
          - project-type: maui # MAUI fails on .NET 9 RC2 at the moment: https://github.com/dotnet/sdk/issues/43049
            dotnet-version: '9.0.1xx'
          - project-type: maui-blazor # MAUI fails on .NET 9 RC2 at the moment: https://github.com/dotnet/sdk/issues/43049
            dotnet-version: '9.0.1xx'
      fail-fast: false # Don't stop other jobs if one fails.

    timeout-minutes: 60

    runs-on: ${{ matrix.os }}  # For a list of available runner types, refer to
                               # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      IS_POSTSHARP_OWNED: true
      TEAMCITY_CLOUD_TOKEN: ${{ secrets.TEAMCITY_CLOUD_TOKEN }}
      ConsoleAnsi: ${{ (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-15') && 'No' || 'Detect' }} # https://github.com/orgs/community/discussions/136868
      MetalamaAssemblyLocatorHooksDirectory: '../..'
      METALAMA_TEMP: /tmp
    #  METALAMA_DIAGNOSTICS: '{"logging": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": true,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false},"trace": {"*": true},"stopLoggingAfterHours": 2.0},"debugging": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false}},"crashDumps": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false},"exceptionTypes": ["*"]},"profiling": {"kind": "performance","processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false}}}'

    steps:
    # Needed only locally
    #- name: Install PowerShell
    #  uses: cakhanif/action-install-powershell@v1

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Avoid issues with symlinks
    # Needed only locally
    #- name: Copy EditorConfig
    #  uses: canastro/copy-file-action@master
    #  with:
    #    source: "eng/style/.editorconfig"
    #    target: ".editorconfig"

    - name: Install .NET For PostSharp.Engineering
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.2xx # Keep in sync with eng\src\global.json.

    - name: Install .NET For The Test
      uses: actions/setup-dotnet@v4
      id: setup-dotnet
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        dotnet-quality: 'daily' # Use the daily build, so we find potential issues early.

    - name: Set The .NET SDK Version
      shell: pwsh
      run: ./Build.ps1 set-sdk-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --nologo

    - name: Install Java
      if: matrix.project-type == 'maui' || matrix.project-type == 'maui-blazor'
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: ${{ matrix.dotnet-version == '6.0.4xx' && '11' || '21' }} # error XA0030: Building with JDK version `21.0.2` is not supported. Please install JDK version `11.0`.

    - name: Install Android SDK
      if: (matrix.project-type == 'maui' || matrix.project-type == 'maui-blazor') && (matrix.os == 'ubuntu-latest' || (matrix.os == 'macos-15' && matrix.dotnet-version == '6.0.4xx'))
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: ${{ matrix.dotnet-version == '6.0.4xx' && '9862592' || '10406996' }} # Based on the Java version installed above. See https://github.com/android-actions/setup-android?tab=readme-ov-file#sdk-version-selection

    - name: Add NuGet Feed # https://github.com/dotnet/sdk/issues/43050 TODO: Remove after .NET 9 GA
      if: matrix.dotnet-version == '9.0.1xx' && matrix.project-type == 'blazorwasm'
      shell: pwsh
      run: dotnet new nugetconfig && dotnet nuget add source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9/nuget/v3/index.json -n dotnet9 --configfile ./nuget.config

    - name: Install .NET Workloads
      if: matrix.project-type == 'maui' || matrix.project-type == 'maui-blazor'
      shell: pwsh
      run: dotnet workload install ${{ matrix.os == 'windows-latest' && 'maui' ||  'maui-android' }}${{ matrix.os == 'macos-15' && ' && dotnet workload install maui-ios && dotnet workload install maui-maccatalyst' ||  '' }}

    - name: Set ref version for Assembly Locator
      shell: pwsh
      run: ./Build.ps1 set-ref-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --nologo

    - name: Create Project
      shell: pwsh
      run: ./Build.ps1 create-project ${{ matrix.project-type }} --nologo

    - name: Build
      shell: pwsh
      run: ./Build.ps1 build --nologo

    - name: Verify Transformations
      shell: pwsh
      run: ./Build.ps1 verify-transformations --nologo

    # - name: Print crash reports
    #   if: always()
    #   run: find /tmp/Metalama/CrashReports/* -type f -exec sh -c 'echo "===== {} ====="; cat {}; echo ""' \;
