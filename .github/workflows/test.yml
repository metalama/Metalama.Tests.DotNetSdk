name: Run Tests

on:
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # os: [windows-latest]
        # os: [ubuntu-latest]
        dotnet-version: ['6.0.1xx', '6.0.4xx', '8.0.1xx', '8.0.3xx', '8.0.4xx', '9.0.1xx' ]
        project-type: ['console', 'maui', 'maui-blazor', 'mvc', 'razor', 'blazor', 'blazorwasm', 'winforms', 'wpf'] # dotnet new list
        configuration: [Debug]
        exclude:
          - project-type: maui
            dotnet-version: 6.0.1xx
          - project-type: maui-blazor
            dotnet-version: 6.0.1xx
          - project-type: blazor
            dotnet-version: 6.0.1xx
          - project-type: blazor
            dotnet-version: 6.0.4xx
      fail-fast: false # Don't stop other jobs if one fails.

    runs-on: ${{ matrix.os }}  # For a list of available runner types, refer to
                               # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      IS_POSTSHARP_OWNED: true
      TEAMCITY_CLOUD_TOKEN: ${{ secrets.TEAMCITY_CLOUD_TOKEN }}
    #  METALAMA_DIAGNOSTICS: '{"logging": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": true,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false},"trace": {"*": true},"stopLoggingAfterHours": 2.0},"debugging": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false}},"crashDumps": {"processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false},"exceptionTypes": ["*"]},"profiling": {"kind": "performance","processes": {"BackstageWorker": false,"DevEnv": false,"LinqPad": false,"TestHost": false,"RoslynCodeAnalysisService": false,"OmniSharp": false,"Rider": false,"Other": false,"ResharperTestRunner": false,"Compiler": false,"BackstageDesktopWindows": false,"VisualStudioMac": false,"LanguageServer": false,"CodeLensService": false,"DotNetTool": false}}}'

    steps:
    # Needed only locally
    #- name: Install PowerShell
    #  uses: cakhanif/action-install-powershell@v1

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Avoid issues with symlinks
    # Needed only locally
    #- name: Copy EditorConfig
    #  uses: canastro/copy-file-action@master
    #  with:
    #    source: "eng/style/.editorconfig"
    #    target: ".editorconfig"

    - name: Install .NET For PostSharp.Engineering
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.2xx # Keep in sync with eng\src\global.json.

    - name: Install .NET For The Test
      uses: actions/setup-dotnet@v4
      id: setup-dotnet
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        dotnet-quality: 'daily' # Use the daily build, so we find potential issues early.

    - name: Set The .NET SDK Version
      shell: pwsh
      run: ./Build.ps1 set-sdk-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --nologo

    - name: Install Java
      if: matrix.project-type == 'maui' || matrix.project-type == 'maui-blazor'
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: ${{ matrix.dotnet-version == '6.0.4xx' && '11' || '21' }} # error XA0030: Building with JDK version `21.0.2` is not supported. Please install JDK version `11.0`.

    - name: Install Other Prerequisities
      shell: pwsh
      run: ./Build.ps1 install-prerequisities ${{ matrix.project-type }} --nologo

    - name: Set ref version for Assembly Locator
      shell: pwsh
      run: ./Build.ps1 set-ref-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --nologo

    - name: Set dependencies
      shell: pwsh
      run: ./Build.ps1 dependencies set BuildServer 2 --branch topic/2024.2/story-35002-sdk-tests --nologo

    - name: Create Project
      shell: pwsh
      run: ./Build.ps1 create-project ${{ matrix.project-type }} --nologo

    - name: Build
      shell: pwsh
      run: ./Build.ps1 build --nologo

    - name: Verify Transformations
      shell: pwsh
      run: ./Build.ps1 verify-transformations --nologo
